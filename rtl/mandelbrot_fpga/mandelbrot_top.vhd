-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mandelbrot_fpga\mandelbrot_top.vhd
-- Created: 2019-10-07 19:53:20
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- 
-- -------------------------------------------------------------
-- Rate and Clocking Details
-- -------------------------------------------------------------
-- Model base rate: 6.75e-09
-- Target subsystem base rate: 1.35e-08
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: mandelbrot_top
-- Source Path: mandelbrot_fpga/mandelbrot_top
-- Hierarchy Level: 0
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY mandelbrot_top IS
  PORT( i_clk                             :   IN    std_logic;
        i_reset_n                         :   IN    std_logic;
        i_enable                          :   IN    std_logic;
        i_video_test                      :   IN    std_logic;
        i_key_right                       :   IN    std_logic;
        i_key_left                        :   IN    std_logic;
        i_key_up                          :   IN    std_logic;
        i_key_down                        :   IN    std_logic;
        i_key_zoom_in                     :   IN    std_logic;
        i_key_zoom_out                    :   IN    std_logic;
        o_video_enable                    :   OUT   std_logic;
        o_horizontal_sync                 :   OUT   std_logic;
        o_vertical_sync                   :   OUT   std_logic;
        o_red                             :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        o_green                           :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
        o_blue                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
        );
END mandelbrot_top;


ARCHITECTURE rtl OF mandelbrot_top IS

  -- Component Declarations
  COMPONENT keyboard_handler
    PORT( i_clk                           :   IN    std_logic;
          i_reset_n                       :   IN    std_logic;
          right                           :   IN    std_logic;
          left                            :   IN    std_logic;
          up                              :   IN    std_logic;
          down                            :   IN    std_logic;
          zoom_in                         :   IN    std_logic;
          zoom_out                        :   IN    std_logic;
          deglitch_threshold              :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          deglitch_enable                 :   IN    std_logic;
          zoom                            :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          horizontal_offset               :   OUT   std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          vertical_offset                 :   OUT   std_logic_vector(17 DOWNTO 0)  -- sfix18_En15
          );
  END COMPONENT;

  COMPONENT enable_deglitch
    PORT( i_clk                           :   IN    std_logic;
          i_reset_n                       :   IN    std_logic;
          in_rsvd                         :   IN    std_logic;
          threshold                       :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          enable                          :   IN    std_logic;
          out_rsvd                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT video_test_deglitch
    PORT( i_clk                           :   IN    std_logic;
          i_reset_n                       :   IN    std_logic;
          in_rsvd                         :   IN    std_logic;
          threshold                       :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
          enable                          :   IN    std_logic;
          out_rsvd                        :   OUT   std_logic
          );
  END COMPONENT;

  COMPONENT mandelbrot_core
    PORT( i_clk                           :   IN    std_logic;
          i_reset_n                       :   IN    std_logic;
          zoom                            :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          horizontal_offset               :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          vertical_offset                 :   IN    std_logic_vector(17 DOWNTO 0);  -- sfix18_En15
          enable                          :   IN    std_logic;
          video_test                      :   IN    std_logic;
          video_enable                    :   OUT   std_logic;
          horizontal_sync                 :   OUT   std_logic;
          vertical_sync                   :   OUT   std_logic;
          red                             :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          green                           :   OUT   std_logic_vector(7 DOWNTO 0);  -- uint8
          blue                            :   OUT   std_logic_vector(7 DOWNTO 0)  -- uint8
          );
  END COMPONENT;

  -- Component Configuration Statements
  FOR ALL : keyboard_handler
    USE ENTITY work.keyboard_handler(rtl);

  FOR ALL : enable_deglitch
    USE ENTITY work.enable_deglitch(rtl);

  FOR ALL : video_test_deglitch
    USE ENTITY work.video_test_deglitch(rtl);

  FOR ALL : mandelbrot_core
    USE ENTITY work.mandelbrot_core(rtl);

  -- Signals
  SIGNAL Constant_out1                    : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL HDL_Counter_out1                 : unsigned(16 DOWNTO 0);  -- ufix17
  SIGNAL Compare_To_Constant_out1         : std_logic;
  SIGNAL keyboard_handler_out1            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL keyboard_handler_out2            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL keyboard_handler_out3            : std_logic_vector(17 DOWNTO 0);  -- ufix18
  SIGNAL enable_deglitch_out1             : std_logic;
  SIGNAL video_test_deglitch_out1         : std_logic;
  SIGNAL mandelbrot_core_out1             : std_logic;
  SIGNAL mandelbrot_core_out2             : std_logic;
  SIGNAL mandelbrot_core_out3             : std_logic;
  SIGNAL mandelbrot_core_out4             : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL mandelbrot_core_out5             : std_logic_vector(7 DOWNTO 0);  -- ufix8
  SIGNAL mandelbrot_core_out6             : std_logic_vector(7 DOWNTO 0);  -- ufix8

BEGIN
  u_keyboard_handler : keyboard_handler
    PORT MAP( i_clk => i_clk,
              i_reset_n => i_reset_n,
              right => i_key_right,
              left => i_key_left,
              up => i_key_up,
              down => i_key_down,
              zoom_in => i_key_zoom_in,
              zoom_out => i_key_zoom_out,
              deglitch_threshold => std_logic_vector(Constant_out1),  -- uint8
              deglitch_enable => Compare_To_Constant_out1,
              zoom => keyboard_handler_out1,  -- sfix18_En15
              horizontal_offset => keyboard_handler_out2,  -- sfix18_En15
              vertical_offset => keyboard_handler_out3  -- sfix18_En15
              );

  u_enable_deglitch : enable_deglitch
    PORT MAP( i_clk => i_clk,
              i_reset_n => i_reset_n,
              in_rsvd => i_enable,
              threshold => std_logic_vector(Constant_out1),  -- uint8
              enable => Compare_To_Constant_out1,
              out_rsvd => enable_deglitch_out1
              );

  u_video_test_deglitch : video_test_deglitch
    PORT MAP( i_clk => i_clk,
              i_reset_n => i_reset_n,
              in_rsvd => i_video_test,
              threshold => std_logic_vector(Constant_out1),  -- uint8
              enable => Compare_To_Constant_out1,
              out_rsvd => video_test_deglitch_out1
              );

  u_mandelbrot_core : mandelbrot_core
    PORT MAP( i_clk => i_clk,
              i_reset_n => i_reset_n,
              zoom => keyboard_handler_out1,  -- sfix18_En15
              horizontal_offset => keyboard_handler_out2,  -- sfix18_En15
              vertical_offset => keyboard_handler_out3,  -- sfix18_En15
              enable => enable_deglitch_out1,
              video_test => video_test_deglitch_out1,
              video_enable => mandelbrot_core_out1,
              horizontal_sync => mandelbrot_core_out2,
              vertical_sync => mandelbrot_core_out3,
              red => mandelbrot_core_out4,  -- uint8
              green => mandelbrot_core_out5,  -- uint8
              blue => mandelbrot_core_out6  -- uint8
              );

  Constant_out1 <= to_unsigned(16#0B#, 8);

  -- Count limited, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  --  count to value  = 65536
  HDL_Counter_process : PROCESS (i_clk, i_reset_n)
  BEGIN
    IF i_reset_n = '0' THEN
      HDL_Counter_out1 <= to_unsigned(16#00000#, 17);
    ELSIF i_clk'EVENT AND i_clk = '1' THEN
      IF HDL_Counter_out1 >= to_unsigned(16#10000#, 17) THEN 
        HDL_Counter_out1 <= to_unsigned(16#00000#, 17);
      ELSE 
        HDL_Counter_out1 <= HDL_Counter_out1 + to_unsigned(16#00001#, 17);
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  Compare_To_Constant_out1 <= '1' WHEN HDL_Counter_out1 = to_unsigned(16#10000#, 17) ELSE
      '0';

  o_video_enable <= mandelbrot_core_out1;

  o_horizontal_sync <= mandelbrot_core_out2;

  o_vertical_sync <= mandelbrot_core_out3;

  o_red <= mandelbrot_core_out4;

  o_green <= mandelbrot_core_out5;

  o_blue <= mandelbrot_core_out6;

END rtl;

