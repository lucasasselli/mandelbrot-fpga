-- -------------------------------------------------------------
-- 
-- File Name: hdl_prj\hdlsrc\mandelbrot_fpga\up_deglitch.vhd
-- Created: 2019-10-07 19:53:19
-- 
-- Generated by MATLAB 9.7 and HDL Coder 3.15
-- 
-- -------------------------------------------------------------


-- -------------------------------------------------------------
-- 
-- Module: up_deglitch
-- Source Path: mandelbrot_fpga/mandelbrot_top/keyboard_handler /up_deglitch
-- Hierarchy Level: 2
-- 
-- -------------------------------------------------------------
LIBRARY IEEE;
USE IEEE.std_logic_1164.ALL;
USE IEEE.numeric_std.ALL;

ENTITY up_deglitch IS
  PORT( i_clk                             :   IN    std_logic;
        i_reset_n                         :   IN    std_logic;
        in_rsvd                           :   IN    std_logic;
        threshold                         :   IN    std_logic_vector(7 DOWNTO 0);  -- uint8
        enable                            :   IN    std_logic;
        out_rsvd                          :   OUT   std_logic
        );
END up_deglitch;


ARCHITECTURE rtl OF up_deglitch IS

  -- Signals
  SIGNAL Logical_Operator_out1            : std_logic;
  SIGNAL threshold_unsigned               : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Relational_Operator_relop1       : std_logic;
  SIGNAL Logical_Operator1_out1           : std_logic;
  SIGNAL HDL_Counter_out1                 : unsigned(7 DOWNTO 0);  -- uint8
  SIGNAL Logical_Operator2_out1           : std_logic;

BEGIN
  Logical_Operator_out1 <=  NOT in_rsvd;

  threshold_unsigned <= unsigned(threshold);

  Logical_Operator1_out1 <= enable AND (in_rsvd AND Relational_Operator_relop1);

  -- Free running, Unsigned Counter
  --  initial value   = 0
  --  step value      = 1
  HDL_Counter_process : PROCESS (i_clk, i_reset_n)
  BEGIN
    IF i_reset_n = '0' THEN
      HDL_Counter_out1 <= to_unsigned(16#00#, 8);
    ELSIF i_clk'EVENT AND i_clk = '1' THEN
      IF Logical_Operator_out1 = '1' THEN 
        HDL_Counter_out1 <= to_unsigned(16#00#, 8);
      ELSIF Logical_Operator1_out1 = '1' THEN 
        HDL_Counter_out1 <= HDL_Counter_out1 + to_unsigned(16#01#, 8);
      END IF;
    END IF;
  END PROCESS HDL_Counter_process;


  
  Relational_Operator_relop1 <= '1' WHEN HDL_Counter_out1 < threshold_unsigned ELSE
      '0';

  Logical_Operator2_out1 <=  NOT Relational_Operator_relop1;

  out_rsvd <= Logical_Operator2_out1;

END rtl;

